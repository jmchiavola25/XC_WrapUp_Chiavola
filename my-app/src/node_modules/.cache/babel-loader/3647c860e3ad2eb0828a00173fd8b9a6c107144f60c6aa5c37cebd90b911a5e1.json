{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tulac\\\\OneDrive - Virginia Tech\\\\XC_Summer2023\\\\XC_WrapUp_Chiavola\\\\my-app\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport './App.css';\nimport { useState, useEffect } from 'react';\nimport AddCountry from './AddCountry.js';\nimport Dropdown from './Dropdown.js';\nimport AddState from './AddState.js';\n// Bootstrap CSS\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n// Bootstrap Bundle JS\nimport \"bootstrap/dist/js/bootstrap.bundle.min\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [selectedCountryCode, setSelectedCountryCode] = useState(\"X\");\n  const [countryData, setCountryData] = useState([]);\n  const [stateData, setStateData] = useState([]);\n  const [updateStates, setUpdateStates] = useState([true]);\n  const [updateCountries, setUpdateCountries] = useState([true]);\n  useEffect(() => {\n    if (updateCountries) {\n      GetCountries();\n    }\n  }, [updateCountries]);\n  useEffect(() => {\n    if (updateStates) {\n      fetch(`http://localhost:7113/api/Countries/${selectedCountryCode}/States/`).then(stateData => stateData.json()).then(stateData => {\n        stateData.sort((a, b) => a.name > b.name ? 1 : -1);\n        setStateData(stateData);\n      });\n      setUpdateStates(false);\n    }\n  }, [selectedCountryCode, updateStates]);\n  const GetCountries = () => {\n    fetch(\"http://localhost:7113/api/Countries\").then(countryData => countryData.json()).then(countryData => {\n      countryData.sort((a, b) => a.name > b.name ? 1 : -1);\n      setCountryData(countryData);\n    });\n    setUpdateCountries(false);\n  };\n\n  //When selected country is changed\n  const HandleCountryChange = event => {\n    if (event.value !== \"default\") {\n      setSelectedCountryCode(event.target.value);\n      UpdateStates();\n      console.log(\"COUNTRY CODE IS \" + event.target.value);\n    }\n  };\n  const UpdateCountries = () => {\n    setUpdateCountries(true);\n  };\n  const UpdateStates = () => {\n    setUpdateStates(true);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"App-title\",\n        children: \"Countries and States\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"countriesDropDown\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Select a Country\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Dropdown, {\n          className: \"Select-country\",\n          id: \"countries\",\n          type: \"Country\",\n          value: \"Country\",\n          select: \"country-list\",\n          data: countryData.map(item => ({\n            key: item.id,\n            value: item.code,\n            text: item.name\n          })),\n          onChange: HandleCountryChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"newCountry\",\n        children: /*#__PURE__*/_jsxDEV(AddCountry, {\n          className: \"Enter-country\",\n          data: countryData,\n          onChange: UpdateCountries\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"statesDropDown\",\n        id: \"divForStates\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Select a State\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Dropdown, {\n          className: \"Select-state\",\n          id: \"states\",\n          type: \"State\",\n          value: \"State\",\n          select: \"state-list\",\n          data: stateData.map(item => ({\n            key: item.id,\n            value: item.code,\n            text: item.name\n          }))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"newState\",\n        children: /*#__PURE__*/_jsxDEV(AddState, {\n          data: countryData,\n          onChange: HandleCountryChange,\n          className: \"Enter-state\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"I0aVip80AWGZLE/lHYAyNAOaazs=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","useEffect","AddCountry","Dropdown","AddState","jsxDEV","_jsxDEV","App","_s","selectedCountryCode","setSelectedCountryCode","countryData","setCountryData","stateData","setStateData","updateStates","setUpdateStates","updateCountries","setUpdateCountries","GetCountries","fetch","then","json","sort","a","b","name","HandleCountryChange","event","value","target","UpdateStates","console","log","UpdateCountries","className","children","fileName","_jsxFileName","lineNumber","columnNumber","Container","id","type","select","data","map","item","key","code","text","onChange","_c","$RefreshReg$"],"sources":["C:/Users/tulac/OneDrive - Virginia Tech/XC_Summer2023/XC_WrapUp_Chiavola/my-app/src/App.js"],"sourcesContent":["import './App.css';\r\nimport {useState, useEffect} from 'react';\r\nimport AddCountry from './AddCountry.js';\r\nimport Dropdown from './Dropdown.js';\r\nimport AddState from './AddState.js';\r\n// Bootstrap CSS\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\n// Bootstrap Bundle JS\r\nimport \"bootstrap/dist/js/bootstrap.bundle.min\";\r\n\r\nfunction App() {\r\n\r\n  const [selectedCountryCode, setSelectedCountryCode] = useState(\"X\");\r\n  const [countryData, setCountryData] = useState([]);\r\n  const [stateData, setStateData] = useState([]);\r\n  const [updateStates, setUpdateStates] = useState([true]);\r\n  const [updateCountries, setUpdateCountries] = useState([true]);\r\n\r\n    useEffect(() => \r\n    {\r\n      if (updateCountries)\r\n      {\r\n        GetCountries();\r\n        \r\n      }\r\n    },[updateCountries]);\r\n\r\n    useEffect(() => {\r\n      if (updateStates)\r\n      {\r\n      fetch(`http://localhost:7113/api/Countries/${selectedCountryCode}/States/`).then(stateData => stateData.json()).then(stateData => {\r\n        stateData.sort((a, b) => (a.name > b.name ? 1 : -1));\r\n        setStateData(stateData)});\r\n        setUpdateStates(false);\r\n        \r\n      }\r\n    }, [selectedCountryCode, updateStates])\r\n\r\n    const GetCountries = () => {\r\n      fetch(\"http://localhost:7113/api/Countries\").then(countryData => countryData.json()).then(countryData => {\r\n        countryData.sort((a, b) => (a.name > b.name ? 1 : -1));\r\n        setCountryData(countryData)});\r\n        setUpdateCountries(false);\r\n    }\r\n\r\n  //When selected country is changed\r\n  const HandleCountryChange = (event) => {\r\n    if (event.value !== \"default\")\r\n    {\r\n    \r\n      setSelectedCountryCode(event.target.value);\r\n      UpdateStates();\r\n      console.log(\"COUNTRY CODE IS \" + event.target.value);\r\n  }\r\n\r\n  }\r\n\r\n  const UpdateCountries = () => {\r\n    setUpdateCountries(true);\r\n  }\r\n\r\n  const UpdateStates = () => {\r\n    setUpdateStates(true);\r\n  }\r\n  \r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <header className=\"App-header\">\r\n        <h1 className=\"App-title\">Countries and States</h1>\r\n      </header>\r\n      <Container>\r\n      <div className=\"countriesDropDown\">\r\n        <h2>Select a Country</h2>\r\n        <Dropdown className=\"Select-country\" id=\"countries\" type=\"Country\" value = \"Country\"\r\n          select=\"country-list\" data={countryData.map(item => ({key: item.id, value: item.code, text: item.name}))} onChange={HandleCountryChange}/>\r\n        </div>\r\n        <div className=\"newCountry\">\r\n          <AddCountry className=\"Enter-country\" data={countryData} onChange={UpdateCountries}/>\r\n        </div>\r\n        <div className=\"statesDropDown\" id=\"divForStates\">\r\n          <h2>Select a State</h2>\r\n          <Dropdown className=\"Select-state\" id =\"states\" type=\"State\" value = \"State\"\r\n            select=\"state-list\" data={stateData.map(item => ({key: item.id, value: item.code, text: item.name}))}/>\r\n        </div>\r\n        <div className = \"newState\">\r\n          <AddState data={countryData} onChange={HandleCountryChange} className=\"Enter-state\"/>\r\n        </div>\r\n        </Container>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}